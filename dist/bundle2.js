(()=>{"use strict";const t=document.getElementById("myCanvas");t.width=window.innerWidth,t.height=window.innerHeight,console.log("HELLO"),new class{constructor(t){this.element=t,this.startTime=0,this.endTime=0,this.longPressThreshold=500,this.tapThreshold=10,this.startDistance=0,this.endDistance=0,this.handleTouchStart=this.handleTouchStart.bind(this),this.handleTouchMove=this.handleTouchMove.bind(this),this.handleTouchEnd=this.handleTouchEnd.bind(this),this.initListeners()}init(){}initListeners(){this.element.addEventListener("touchstart",this.handleTouchStart,!1),this.element.addEventListener("touchmove",this.handleTouchMove,!1),this.element.addEventListener("touchend",this.handleTouchEnd,!1)}handleTouchStart(t){const e=t.touches[0];if(this.startTime=Date.now(),this.touchStartX=e.clientX,this.touchStartY=e.clientY,t.touches.length>1){const s=t.touches[1];this.startDistance=this.calculateDistance(e,s)}}handleTouchMove(t){if(t.preventDefault(),t.touches.length>1){const e=t.touches[0],s=t.touches[1];this.endDistance=this.calculateDistance(e,s)}}handleTouchEnd(t){t.preventDefault(),this.endTime=Date.now();const e=this.endTime-this.startTime;this.touchEndX=t.changedTouches[0].clientX,this.touchEndY=t.changedTouches[0].clientY;const s=this.touchEndX-this.touchStartX,h=this.touchEndY-this.touchStartY;Math.abs(s)<this.tapThreshold&&Math.abs(h)<this.tapThreshold?e<this.longPressThreshold?console.log("Tap"):console.log("Long Press"):this.detectSwipe(),this.startDistance>0&&this.endDistance>0&&(this.endDistance>this.startDistance?console.log("Pinch Out"):console.log("Pinch In")),this.startDistance=0,this.endDistance=0}detectSwipe(){const t=this.touchEndX-this.touchStartX,e=this.touchEndY-this.touchStartY;Math.abs(t)>Math.abs(e)?t>100?console.log("Swipe Right"):t<-100&&console.log("Swipe Left"):e>100?console.log("Swipe Down"):e<-100&&console.log("Swipe Up")}calculateDistance(t,e){const s=e.clientX-t.clientX,h=e.clientY-t.clientY;return Math.sqrt(s*s+h*h)}}(t)})();